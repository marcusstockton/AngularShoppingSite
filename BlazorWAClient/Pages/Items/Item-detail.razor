@page "/item-detail/{Id}"
@inject HttpClient Http
@using BlazorWAClient.Pages.Items;


<div class="container"> 
    <p>The Id is @Id</p>
    @if(item == null){
        <p>Loading....</p>
    }
    else
    {
        <p>The response is @item</p>
        <p>@item.Title</p>
        <p>@item.Description</p>
        <p>@item.Price</p>
        <p># of images @item.Images.Count</p>

        <!-- Carousel -->
        <div id="carouselExampleSlidesOnly" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                @for (int i = 0; i < item.Images.Count; i++)
                {
                    var img = item.Images[i];
                    var itemClass = i == 0 ? "carousel-item active" : "carousel-item";
                    <div class="@itemClass">
                        <img src='@($"https://localhost:5001/api/{img.Path}")' alt="img.FileName" class="d-block" width="150">
                    </div>
                }
            </div>
        </div>

        <NavLink href = "@($"/item-form/{item.Id}")" class="btn btn-primary">Edit</NavLink>
    }
    
</div>

@code{
    [Parameter]
    public string Id { get; set; }
    ItemModel item;

    protected override async Task OnInitializedAsync()
    {
        item = await Http.GetJsonAsync<ItemModel>($"https://localhost:5001/api/Items/{Id}");
    }
}